"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/feed";
exports.ids = ["vendor-chunks/feed"];
exports.modules = {

/***/ "(rsc)/./node_modules/feed/lib/atom1.js":
/*!****************************************!*\
  !*** ./node_modules/feed/lib/atom1.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar convert = __webpack_require__(/*! xml-js */ \"(rsc)/./node_modules/xml-js/lib/index.js\");\nvar config_1 = __webpack_require__(/*! ./config */ \"(rsc)/./node_modules/feed/lib/config/index.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/feed/lib/utils.js\");\nexports[\"default\"] = function(ins) {\n    var options = ins.options;\n    var base = {\n        _declaration: {\n            _attributes: {\n                version: \"1.0\",\n                encoding: \"utf-8\"\n            }\n        },\n        feed: {\n            _attributes: {\n                xmlns: \"http://www.w3.org/2005/Atom\"\n            },\n            id: options.id,\n            title: options.title,\n            updated: options.updated ? options.updated.toISOString() : new Date().toISOString(),\n            generator: utils_1.sanitize(options.generator || config_1.generator)\n        }\n    };\n    if (options.author) {\n        base.feed.author = formatAuthor(options.author);\n    }\n    base.feed.link = [];\n    if (options.link) {\n        base.feed.link.push({\n            _attributes: {\n                rel: \"alternate\",\n                href: utils_1.sanitize(options.link)\n            }\n        });\n    }\n    var atomLink = utils_1.sanitize(options.feed || options.feedLinks && options.feedLinks.atom);\n    if (atomLink) {\n        base.feed.link.push({\n            _attributes: {\n                rel: \"self\",\n                href: utils_1.sanitize(atomLink)\n            }\n        });\n    }\n    if (options.hub) {\n        base.feed.link.push({\n            _attributes: {\n                rel: \"hub\",\n                href: utils_1.sanitize(options.hub)\n            }\n        });\n    }\n    if (options.description) {\n        base.feed.subtitle = options.description;\n    }\n    if (options.image) {\n        base.feed.logo = options.image;\n    }\n    if (options.favicon) {\n        base.feed.icon = options.favicon;\n    }\n    if (options.copyright) {\n        base.feed.rights = options.copyright;\n    }\n    base.feed.category = [];\n    ins.categories.map(function(category) {\n        base.feed.category.push({\n            _attributes: {\n                term: category\n            }\n        });\n    });\n    base.feed.contributor = [];\n    ins.contributors.map(function(contributor) {\n        base.feed.contributor.push(formatAuthor(contributor));\n    });\n    base.feed.entry = [];\n    ins.items.map(function(item) {\n        var entry = {\n            title: {\n                _attributes: {\n                    type: \"html\"\n                },\n                _cdata: item.title\n            },\n            id: utils_1.sanitize(item.id || item.link),\n            link: [\n                {\n                    _attributes: {\n                        href: utils_1.sanitize(item.link)\n                    }\n                }\n            ],\n            updated: item.date.toISOString()\n        };\n        if (item.description) {\n            entry.summary = {\n                _attributes: {\n                    type: \"html\"\n                },\n                _cdata: item.description\n            };\n        }\n        if (item.content) {\n            entry.content = {\n                _attributes: {\n                    type: \"html\"\n                },\n                _cdata: item.content\n            };\n        }\n        if (Array.isArray(item.author)) {\n            entry.author = [];\n            item.author.map(function(author) {\n                entry.author.push(formatAuthor(author));\n            });\n        }\n        if (Array.isArray(item.category)) {\n            entry.category = [];\n            item.category.map(function(category) {\n                entry.category.push(formatCategory(category));\n            });\n        }\n        if (item.contributor && Array.isArray(item.contributor)) {\n            entry.contributor = [];\n            item.contributor.map(function(contributor) {\n                entry.contributor.push(formatAuthor(contributor));\n            });\n        }\n        if (item.published) {\n            entry.published = item.published.toISOString();\n        }\n        if (item.copyright) {\n            entry.rights = item.copyright;\n        }\n        base.feed.entry.push(entry);\n    });\n    return convert.js2xml(base, {\n        compact: true,\n        ignoreComment: true,\n        spaces: 4\n    });\n};\nvar formatAuthor = function(author) {\n    var name = author.name, email = author.email, link = author.link;\n    var out = {\n        name: name\n    };\n    if (email) {\n        out.email = email;\n    }\n    if (link) {\n        out.uri = utils_1.sanitize(link);\n    }\n    return out;\n};\nvar formatCategory = function(category) {\n    var name = category.name, scheme = category.scheme, term = category.term;\n    return {\n        _attributes: {\n            label: name,\n            scheme: scheme,\n            term: term\n        }\n    };\n}; //# sourceMappingURL=atom1.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/feed/lib/atom1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/feed/lib/config/index.js":
/*!***********************************************!*\
  !*** ./node_modules/feed/lib/config/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generator = void 0;\nexports.generator = \"https://github.com/jpmonette/feed\"; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZmVlZC9saWIvY29uZmlnL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBRyxLQUFLO0FBQ3pCQSxpQkFBaUIsR0FBRyxxQ0FDcEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVzdC1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvZmVlZC9saWIvY29uZmlnL2luZGV4LmpzP2E3OGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdlbmVyYXRvciA9IHZvaWQgMDtcbmV4cG9ydHMuZ2VuZXJhdG9yID0gXCJodHRwczovL2dpdGh1Yi5jb20vanBtb25ldHRlL2ZlZWRcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdlbmVyYXRvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/feed/lib/config/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/feed/lib/feed.js":
/*!***************************************!*\
  !*** ./node_modules/feed/lib/feed.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Feed = void 0;\nvar atom1_1 = __webpack_require__(/*! ./atom1 */ \"(rsc)/./node_modules/feed/lib/atom1.js\");\nvar json_1 = __webpack_require__(/*! ./json */ \"(rsc)/./node_modules/feed/lib/json.js\");\nvar rss2_1 = __webpack_require__(/*! ./rss2 */ \"(rsc)/./node_modules/feed/lib/rss2.js\");\nvar Feed = function() {\n    function Feed(options) {\n        var _this = this;\n        this.items = [];\n        this.categories = [];\n        this.contributors = [];\n        this.extensions = [];\n        this.addItem = function(item) {\n            return _this.items.push(item);\n        };\n        this.addCategory = function(category) {\n            return _this.categories.push(category);\n        };\n        this.addContributor = function(contributor) {\n            return _this.contributors.push(contributor);\n        };\n        this.addExtension = function(extension) {\n            return _this.extensions.push(extension);\n        };\n        this.atom1 = function() {\n            return atom1_1.default(_this);\n        };\n        this.rss2 = function() {\n            return rss2_1.default(_this);\n        };\n        this.json1 = function() {\n            return json_1.default(_this);\n        };\n        this.options = options;\n    }\n    return Feed;\n}();\nexports.Feed = Feed; //# sourceMappingURL=feed.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZmVlZC9saWIvZmVlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsWUFBWSxHQUFHLEtBQUs7QUFDcEIsSUFBSUcsVUFBVUMsbUJBQU9BLENBQUMsdURBQVM7QUFDL0IsSUFBSUMsU0FBU0QsbUJBQU9BLENBQUMscURBQVE7QUFDN0IsSUFBSUUsU0FBU0YsbUJBQU9BLENBQUMscURBQVE7QUFDN0IsSUFBSUYsT0FBUTtJQUNSLFNBQVNBLEtBQUtLLE9BQU87UUFDakIsSUFBSUMsUUFBUSxJQUFJO1FBQ2hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHLEVBQUU7UUFDZixJQUFJLENBQUNDLFVBQVUsR0FBRyxFQUFFO1FBQ3BCLElBQUksQ0FBQ0MsWUFBWSxHQUFHLEVBQUU7UUFDdEIsSUFBSSxDQUFDQyxVQUFVLEdBQUcsRUFBRTtRQUNwQixJQUFJLENBQUNDLE9BQU8sR0FBRyxTQUFVQyxJQUFJO1lBQUksT0FBT04sTUFBTUMsS0FBSyxDQUFDTSxJQUFJLENBQUNEO1FBQU87UUFDaEUsSUFBSSxDQUFDRSxXQUFXLEdBQUcsU0FBVUMsUUFBUTtZQUFJLE9BQU9ULE1BQU1FLFVBQVUsQ0FBQ0ssSUFBSSxDQUFDRTtRQUFXO1FBQ2pGLElBQUksQ0FBQ0MsY0FBYyxHQUFHLFNBQVVDLFdBQVc7WUFBSSxPQUFPWCxNQUFNRyxZQUFZLENBQUNJLElBQUksQ0FBQ0k7UUFBYztRQUM1RixJQUFJLENBQUNDLFlBQVksR0FBRyxTQUFVQyxTQUFTO1lBQUksT0FBT2IsTUFBTUksVUFBVSxDQUFDRyxJQUFJLENBQUNNO1FBQVk7UUFDcEYsSUFBSSxDQUFDQyxLQUFLLEdBQUc7WUFBYyxPQUFPbkIsUUFBUW9CLE9BQU8sQ0FBQ2Y7UUFBUTtRQUMxRCxJQUFJLENBQUNnQixJQUFJLEdBQUc7WUFBYyxPQUFPbEIsT0FBT2lCLE9BQU8sQ0FBQ2Y7UUFBUTtRQUN4RCxJQUFJLENBQUNpQixLQUFLLEdBQUc7WUFBYyxPQUFPcEIsT0FBT2tCLE9BQU8sQ0FBQ2Y7UUFBUTtRQUN6RCxJQUFJLENBQUNELE9BQU8sR0FBR0E7SUFDbkI7SUFDQSxPQUFPTDtBQUNYO0FBQ0FGLFlBQVksR0FBR0UsTUFDZixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0LXBvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9mZWVkL2xpYi9mZWVkLmpzPzE1YjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkZlZWQgPSB2b2lkIDA7XG52YXIgYXRvbTFfMSA9IHJlcXVpcmUoXCIuL2F0b20xXCIpO1xudmFyIGpzb25fMSA9IHJlcXVpcmUoXCIuL2pzb25cIik7XG52YXIgcnNzMl8xID0gcmVxdWlyZShcIi4vcnNzMlwiKTtcbnZhciBGZWVkID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBGZWVkKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtdO1xuICAgICAgICB0aGlzLmNhdGVnb3JpZXMgPSBbXTtcbiAgICAgICAgdGhpcy5jb250cmlidXRvcnMgPSBbXTtcbiAgICAgICAgdGhpcy5leHRlbnNpb25zID0gW107XG4gICAgICAgIHRoaXMuYWRkSXRlbSA9IGZ1bmN0aW9uIChpdGVtKSB7IHJldHVybiBfdGhpcy5pdGVtcy5wdXNoKGl0ZW0pOyB9O1xuICAgICAgICB0aGlzLmFkZENhdGVnb3J5ID0gZnVuY3Rpb24gKGNhdGVnb3J5KSB7IHJldHVybiBfdGhpcy5jYXRlZ29yaWVzLnB1c2goY2F0ZWdvcnkpOyB9O1xuICAgICAgICB0aGlzLmFkZENvbnRyaWJ1dG9yID0gZnVuY3Rpb24gKGNvbnRyaWJ1dG9yKSB7IHJldHVybiBfdGhpcy5jb250cmlidXRvcnMucHVzaChjb250cmlidXRvcik7IH07XG4gICAgICAgIHRoaXMuYWRkRXh0ZW5zaW9uID0gZnVuY3Rpb24gKGV4dGVuc2lvbikgeyByZXR1cm4gX3RoaXMuZXh0ZW5zaW9ucy5wdXNoKGV4dGVuc2lvbik7IH07XG4gICAgICAgIHRoaXMuYXRvbTEgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBhdG9tMV8xLmRlZmF1bHQoX3RoaXMpOyB9O1xuICAgICAgICB0aGlzLnJzczIgPSBmdW5jdGlvbiAoKSB7IHJldHVybiByc3MyXzEuZGVmYXVsdChfdGhpcyk7IH07XG4gICAgICAgIHRoaXMuanNvbjEgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBqc29uXzEuZGVmYXVsdChfdGhpcyk7IH07XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgfVxuICAgIHJldHVybiBGZWVkO1xufSgpKTtcbmV4cG9ydHMuRmVlZCA9IEZlZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZWVkLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkZlZWQiLCJhdG9tMV8xIiwicmVxdWlyZSIsImpzb25fMSIsInJzczJfMSIsIm9wdGlvbnMiLCJfdGhpcyIsIml0ZW1zIiwiY2F0ZWdvcmllcyIsImNvbnRyaWJ1dG9ycyIsImV4dGVuc2lvbnMiLCJhZGRJdGVtIiwiaXRlbSIsInB1c2giLCJhZGRDYXRlZ29yeSIsImNhdGVnb3J5IiwiYWRkQ29udHJpYnV0b3IiLCJjb250cmlidXRvciIsImFkZEV4dGVuc2lvbiIsImV4dGVuc2lvbiIsImF0b20xIiwiZGVmYXVsdCIsInJzczIiLCJqc29uMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/feed/lib/feed.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/feed/lib/json.js":
/*!***************************************!*\
  !*** ./node_modules/feed/lib/json.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = function(ins) {\n    var options = ins.options, items = ins.items, extensions = ins.extensions;\n    var feed = {\n        version: \"https://jsonfeed.org/version/1\",\n        title: options.title\n    };\n    if (options.link) {\n        feed.home_page_url = options.link;\n    }\n    if (options.feedLinks && options.feedLinks.json) {\n        feed.feed_url = options.feedLinks.json;\n    }\n    if (options.description) {\n        feed.description = options.description;\n    }\n    if (options.image) {\n        feed.icon = options.image;\n    }\n    if (options.author) {\n        feed.author = {};\n        if (options.author.name) {\n            feed.author.name = options.author.name;\n        }\n        if (options.author.link) {\n            feed.author.url = options.author.link;\n        }\n    }\n    extensions.map(function(e) {\n        feed[e.name] = e.objects;\n    });\n    feed.items = items.map(function(item) {\n        var feedItem = {\n            id: item.id,\n            content_html: item.content\n        };\n        if (item.link) {\n            feedItem.url = item.link;\n        }\n        if (item.title) {\n            feedItem.title = item.title;\n        }\n        if (item.description) {\n            feedItem.summary = item.description;\n        }\n        if (item.image) {\n            feedItem.image = item.image;\n        }\n        if (item.date) {\n            feedItem.date_modified = item.date.toISOString();\n        }\n        if (item.published) {\n            feedItem.date_published = item.published.toISOString();\n        }\n        if (item.author) {\n            var author = item.author;\n            if (author instanceof Array) {\n                author = author[0];\n            }\n            feedItem.author = {};\n            if (author.name) {\n                feedItem.author.name = author.name;\n            }\n            if (author.link) {\n                feedItem.author.url = author.link;\n            }\n        }\n        if (Array.isArray(item.category)) {\n            feedItem.tags = [];\n            item.category.map(function(category) {\n                if (category.name) {\n                    feedItem.tags.push(category.name);\n                }\n            });\n        }\n        if (item.extensions) {\n            item.extensions.map(function(e) {\n                feedItem[e.name] = e.objects;\n            });\n        }\n        return feedItem;\n    });\n    return JSON.stringify(feed, null, 4);\n}; //# sourceMappingURL=json.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQUl5QixNQUFNQyxPQUFPLENBQUNaLEtBQUthLFFBQVEsR0FBRztZQUM5QlosU0FBU2EsSUFBSSxHQUFHLEVBQUU7WUFDbEJkLEtBQUthLFFBQVEsQ0FBQ2hCLEdBQUcsQ0FBQyxTQUFVZ0IsUUFBUTtnQkFDaEMsSUFBSUEsU0FBU2xCLElBQUksRUFBRTtvQkFDZk0sU0FBU2EsSUFBSSxDQUFDQyxJQUFJLENBQUNGLFNBQVNsQixJQUFJO2dCQUNwQztZQUNKO1FBQ0o7UUFDQSxJQUFJSyxLQUFLbEIsVUFBVSxFQUFFO1lBQ2pCa0IsS0FBS2xCLFVBQVUsQ0FBQ2UsR0FBRyxDQUFDLFNBQVVDLENBQUM7Z0JBQzNCRyxRQUFRLENBQUNILEVBQUVILElBQUksQ0FBQyxHQUFHRyxFQUFFQyxPQUFPO1lBQ2hDO1FBQ0o7UUFDQSxPQUFPRTtJQUNYO0lBQ0EsT0FBT2UsS0FBS0MsU0FBUyxDQUFDbEMsTUFBTSxNQUFNO0FBQ3RDLEdBQ0EsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVzdC1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvZmVlZC9saWIvanNvbi5qcz84Y2EwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gKGZ1bmN0aW9uIChpbnMpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGlucy5vcHRpb25zLCBpdGVtcyA9IGlucy5pdGVtcywgZXh0ZW5zaW9ucyA9IGlucy5leHRlbnNpb25zO1xuICAgIHZhciBmZWVkID0ge1xuICAgICAgICB2ZXJzaW9uOiBcImh0dHBzOi8vanNvbmZlZWQub3JnL3ZlcnNpb24vMVwiLFxuICAgICAgICB0aXRsZTogb3B0aW9ucy50aXRsZSxcbiAgICB9O1xuICAgIGlmIChvcHRpb25zLmxpbmspIHtcbiAgICAgICAgZmVlZC5ob21lX3BhZ2VfdXJsID0gb3B0aW9ucy5saW5rO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5mZWVkTGlua3MgJiYgb3B0aW9ucy5mZWVkTGlua3MuanNvbikge1xuICAgICAgICBmZWVkLmZlZWRfdXJsID0gb3B0aW9ucy5mZWVkTGlua3MuanNvbjtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuZGVzY3JpcHRpb24pIHtcbiAgICAgICAgZmVlZC5kZXNjcmlwdGlvbiA9IG9wdGlvbnMuZGVzY3JpcHRpb247XG4gICAgfVxuICAgIGlmIChvcHRpb25zLmltYWdlKSB7XG4gICAgICAgIGZlZWQuaWNvbiA9IG9wdGlvbnMuaW1hZ2U7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLmF1dGhvcikge1xuICAgICAgICBmZWVkLmF1dGhvciA9IHt9O1xuICAgICAgICBpZiAob3B0aW9ucy5hdXRob3IubmFtZSkge1xuICAgICAgICAgICAgZmVlZC5hdXRob3IubmFtZSA9IG9wdGlvbnMuYXV0aG9yLm5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMuYXV0aG9yLmxpbmspIHtcbiAgICAgICAgICAgIGZlZWQuYXV0aG9yLnVybCA9IG9wdGlvbnMuYXV0aG9yLmxpbms7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZXh0ZW5zaW9ucy5tYXAoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgZmVlZFtlLm5hbWVdID0gZS5vYmplY3RzO1xuICAgIH0pO1xuICAgIGZlZWQuaXRlbXMgPSBpdGVtcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgdmFyIGZlZWRJdGVtID0ge1xuICAgICAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAgICAgICAgICBjb250ZW50X2h0bWw6IGl0ZW0uY29udGVudCxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGl0ZW0ubGluaykge1xuICAgICAgICAgICAgZmVlZEl0ZW0udXJsID0gaXRlbS5saW5rO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpdGVtLnRpdGxlKSB7XG4gICAgICAgICAgICBmZWVkSXRlbS50aXRsZSA9IGl0ZW0udGl0bGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGl0ZW0uZGVzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIGZlZWRJdGVtLnN1bW1hcnkgPSBpdGVtLmRlc2NyaXB0aW9uO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpdGVtLmltYWdlKSB7XG4gICAgICAgICAgICBmZWVkSXRlbS5pbWFnZSA9IGl0ZW0uaW1hZ2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGl0ZW0uZGF0ZSkge1xuICAgICAgICAgICAgZmVlZEl0ZW0uZGF0ZV9tb2RpZmllZCA9IGl0ZW0uZGF0ZS50b0lTT1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpdGVtLnB1Ymxpc2hlZCkge1xuICAgICAgICAgICAgZmVlZEl0ZW0uZGF0ZV9wdWJsaXNoZWQgPSBpdGVtLnB1Ymxpc2hlZC50b0lTT1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpdGVtLmF1dGhvcikge1xuICAgICAgICAgICAgdmFyIGF1dGhvciA9IGl0ZW0uYXV0aG9yO1xuICAgICAgICAgICAgaWYgKGF1dGhvciBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgICAgICAgICAgYXV0aG9yID0gYXV0aG9yWzBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmVlZEl0ZW0uYXV0aG9yID0ge307XG4gICAgICAgICAgICBpZiAoYXV0aG9yLm5hbWUpIHtcbiAgICAgICAgICAgICAgICBmZWVkSXRlbS5hdXRob3IubmFtZSA9IGF1dGhvci5uYW1lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGF1dGhvci5saW5rKSB7XG4gICAgICAgICAgICAgICAgZmVlZEl0ZW0uYXV0aG9yLnVybCA9IGF1dGhvci5saW5rO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGl0ZW0uY2F0ZWdvcnkpKSB7XG4gICAgICAgICAgICBmZWVkSXRlbS50YWdzID0gW107XG4gICAgICAgICAgICBpdGVtLmNhdGVnb3J5Lm1hcChmdW5jdGlvbiAoY2F0ZWdvcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2F0ZWdvcnkubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBmZWVkSXRlbS50YWdzLnB1c2goY2F0ZWdvcnkubmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGl0ZW0uZXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgaXRlbS5leHRlbnNpb25zLm1hcChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGZlZWRJdGVtW2UubmFtZV0gPSBlLm9iamVjdHM7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmVlZEl0ZW07XG4gICAgfSk7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGZlZWQsIG51bGwsIDQpO1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29uLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJpbnMiLCJvcHRpb25zIiwiaXRlbXMiLCJleHRlbnNpb25zIiwiZmVlZCIsInZlcnNpb24iLCJ0aXRsZSIsImxpbmsiLCJob21lX3BhZ2VfdXJsIiwiZmVlZExpbmtzIiwianNvbiIsImZlZWRfdXJsIiwiZGVzY3JpcHRpb24iLCJpbWFnZSIsImljb24iLCJhdXRob3IiLCJuYW1lIiwidXJsIiwibWFwIiwiZSIsIm9iamVjdHMiLCJpdGVtIiwiZmVlZEl0ZW0iLCJpZCIsImNvbnRlbnRfaHRtbCIsImNvbnRlbnQiLCJzdW1tYXJ5IiwiZGF0ZSIsImRhdGVfbW9kaWZpZWQiLCJ0b0lTT1N0cmluZyIsInB1Ymxpc2hlZCIsImRhdGVfcHVibGlzaGVkIiwiQXJyYXkiLCJpc0FycmF5IiwiY2F0ZWdvcnkiLCJ0YWdzIiwicHVzaCIsIkpTT04iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/feed/lib/json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/feed/lib/rss2.js":
/*!***************************************!*\
  !*** ./node_modules/feed/lib/rss2.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar convert = __webpack_require__(/*! xml-js */ \"(rsc)/./node_modules/xml-js/lib/index.js\");\nvar config_1 = __webpack_require__(/*! ./config */ \"(rsc)/./node_modules/feed/lib/config/index.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/feed/lib/utils.js\");\nexports[\"default\"] = function(ins) {\n    var options = ins.options;\n    var isAtom = false;\n    var isContent = false;\n    var base = {\n        _declaration: {\n            _attributes: {\n                version: \"1.0\",\n                encoding: \"utf-8\"\n            }\n        },\n        rss: {\n            _attributes: {\n                version: \"2.0\"\n            },\n            channel: {\n                title: {\n                    _text: options.title\n                },\n                link: {\n                    _text: utils_1.sanitize(options.link)\n                },\n                description: {\n                    _text: options.description\n                },\n                lastBuildDate: {\n                    _text: options.updated ? options.updated.toUTCString() : new Date().toUTCString()\n                },\n                docs: {\n                    _text: options.docs ? options.docs : \"https://validator.w3.org/feed/docs/rss2.html\"\n                },\n                generator: {\n                    _text: options.generator || config_1.generator\n                }\n            }\n        }\n    };\n    if (options.language) {\n        base.rss.channel.language = {\n            _text: options.language\n        };\n    }\n    if (options.ttl) {\n        base.rss.channel.ttl = {\n            _text: options.ttl\n        };\n    }\n    if (options.image) {\n        base.rss.channel.image = {\n            title: {\n                _text: options.title\n            },\n            url: {\n                _text: options.image\n            },\n            link: {\n                _text: utils_1.sanitize(options.link)\n            }\n        };\n    }\n    if (options.copyright) {\n        base.rss.channel.copyright = {\n            _text: options.copyright\n        };\n    }\n    ins.categories.map(function(category) {\n        if (!base.rss.channel.category) {\n            base.rss.channel.category = [];\n        }\n        base.rss.channel.category.push({\n            _text: category\n        });\n    });\n    var atomLink = options.feed || options.feedLinks && options.feedLinks.rss;\n    if (atomLink) {\n        isAtom = true;\n        base.rss.channel[\"atom:link\"] = [\n            {\n                _attributes: {\n                    href: utils_1.sanitize(atomLink),\n                    rel: \"self\",\n                    type: \"application/rss+xml\"\n                }\n            }\n        ];\n    }\n    if (options.hub) {\n        isAtom = true;\n        if (!base.rss.channel[\"atom:link\"]) {\n            base.rss.channel[\"atom:link\"] = [];\n        }\n        base.rss.channel[\"atom:link\"] = {\n            _attributes: {\n                href: utils_1.sanitize(options.hub),\n                rel: \"hub\"\n            }\n        };\n    }\n    base.rss.channel.item = [];\n    ins.items.map(function(entry) {\n        var item = {};\n        if (entry.title) {\n            item.title = {\n                _cdata: entry.title\n            };\n        }\n        if (entry.link) {\n            item.link = {\n                _text: utils_1.sanitize(entry.link)\n            };\n        }\n        if (entry.guid) {\n            item.guid = {\n                _text: entry.guid\n            };\n        } else if (entry.id) {\n            item.guid = {\n                _text: entry.id\n            };\n        } else if (entry.link) {\n            item.guid = {\n                _text: utils_1.sanitize(entry.link)\n            };\n        }\n        if (entry.date) {\n            item.pubDate = {\n                _text: entry.date.toUTCString()\n            };\n        }\n        if (entry.published) {\n            item.pubDate = {\n                _text: entry.published.toUTCString()\n            };\n        }\n        if (entry.description) {\n            item.description = {\n                _cdata: entry.description\n            };\n        }\n        if (entry.content) {\n            isContent = true;\n            item[\"content:encoded\"] = {\n                _cdata: entry.content\n            };\n        }\n        if (Array.isArray(entry.author)) {\n            item.author = [];\n            entry.author.map(function(author) {\n                if (author.email && author.name) {\n                    item.author.push({\n                        _text: author.email + \" (\" + author.name + \")\"\n                    });\n                }\n            });\n        }\n        if (Array.isArray(entry.category)) {\n            item.category = [];\n            entry.category.map(function(category) {\n                item.category.push(formatCategory(category));\n            });\n        }\n        if (entry.enclosure) {\n            item.enclosure = formatEnclosure(entry.enclosure);\n        }\n        if (entry.image) {\n            item.enclosure = formatEnclosure(entry.image, \"image\");\n        }\n        if (entry.audio) {\n            item.enclosure = formatEnclosure(entry.audio, \"audio\");\n        }\n        if (entry.video) {\n            item.enclosure = formatEnclosure(entry.video, \"video\");\n        }\n        base.rss.channel.item.push(item);\n    });\n    if (isContent) {\n        base.rss._attributes[\"xmlns:dc\"] = \"http://purl.org/dc/elements/1.1/\";\n        base.rss._attributes[\"xmlns:content\"] = \"http://purl.org/rss/1.0/modules/content/\";\n    }\n    if (isAtom) {\n        base.rss._attributes[\"xmlns:atom\"] = \"http://www.w3.org/2005/Atom\";\n    }\n    return convert.js2xml(base, {\n        compact: true,\n        ignoreComment: true,\n        spaces: 4\n    });\n};\nvar formatEnclosure = function(enclosure, mimeCategory) {\n    if (mimeCategory === void 0) {\n        mimeCategory = \"image\";\n    }\n    if (typeof enclosure === \"string\") {\n        var type_1 = new URL(enclosure).pathname.split(\".\").slice(-1)[0];\n        return {\n            _attributes: {\n                url: enclosure,\n                length: 0,\n                type: mimeCategory + \"/\" + type_1\n            }\n        };\n    }\n    var type = new URL(enclosure.url).pathname.split(\".\").slice(-1)[0];\n    return {\n        _attributes: __assign({\n            length: 0,\n            type: mimeCategory + \"/\" + type\n        }, enclosure)\n    };\n};\nvar formatCategory = function(category) {\n    var name = category.name, domain = category.domain;\n    return {\n        _text: name,\n        _attributes: {\n            domain: domain\n        }\n    };\n}; //# sourceMappingURL=rss2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFFBQVE7UUFDUkUsS0FBS0ssR0FBRyxDQUFDSCxXQUFXLENBQUMsYUFBYSxHQUFHO0lBQ3pDO0lBQ0EsT0FBT1gsUUFBUStELE1BQU0sQ0FBQ3RELE1BQU07UUFBRXVELFNBQVM7UUFBTUMsZUFBZTtRQUFNQyxRQUFRO0lBQUU7QUFDaEY7QUFDQSxJQUFJTixrQkFBa0IsU0FBVUQsU0FBUyxFQUFFUSxZQUFZO0lBQ25ELElBQUlBLGlCQUFpQixLQUFLLEdBQUc7UUFBRUEsZUFBZTtJQUFTO0lBQ3ZELElBQUksT0FBT1IsY0FBYyxVQUFVO1FBQy9CLElBQUlTLFNBQVMsSUFBSUMsSUFBSVYsV0FBV1csUUFBUSxDQUFDQyxLQUFLLENBQUMsS0FBS0MsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7UUFDaEUsT0FBTztZQUFFN0QsYUFBYTtnQkFBRW1CLEtBQUs2QjtnQkFBV3BFLFFBQVE7Z0JBQUdrRCxNQUFNMEIsZUFBZSxNQUFNQztZQUFPO1FBQUU7SUFDM0Y7SUFDQSxJQUFJM0IsT0FBTyxJQUFJNEIsSUFBSVYsVUFBVTdCLEdBQUcsRUFBRXdDLFFBQVEsQ0FBQ0MsS0FBSyxDQUFDLEtBQUtDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ2xFLE9BQU87UUFBRTdELGFBQWE1QixTQUFTO1lBQUVRLFFBQVE7WUFBR2tELE1BQU0wQixlQUFlLE1BQU0xQjtRQUFLLEdBQUdrQjtJQUFXO0FBQzlGO0FBQ0EsSUFBSUQsaUJBQWlCLFNBQVV4QixRQUFRO0lBQ25DLElBQUl1QixPQUFPdkIsU0FBU3VCLElBQUksRUFBRWdCLFNBQVN2QyxTQUFTdUMsTUFBTTtJQUNsRCxPQUFPO1FBQ0h4RCxPQUFPd0M7UUFDUDlDLGFBQWE7WUFDVDhELFFBQVFBO1FBQ1o7SUFDSjtBQUNKLEdBQ0EsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVzdC1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvZmVlZC9saWIvcnNzMi5qcz8xY2FhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBjb252ZXJ0ID0gcmVxdWlyZShcInhtbC1qc1wiKTtcbnZhciBjb25maWdfMSA9IHJlcXVpcmUoXCIuL2NvbmZpZ1wiKTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5leHBvcnRzLmRlZmF1bHQgPSAoZnVuY3Rpb24gKGlucykge1xuICAgIHZhciBvcHRpb25zID0gaW5zLm9wdGlvbnM7XG4gICAgdmFyIGlzQXRvbSA9IGZhbHNlO1xuICAgIHZhciBpc0NvbnRlbnQgPSBmYWxzZTtcbiAgICB2YXIgYmFzZSA9IHtcbiAgICAgICAgX2RlY2xhcmF0aW9uOiB7IF9hdHRyaWJ1dGVzOiB7IHZlcnNpb246IFwiMS4wXCIsIGVuY29kaW5nOiBcInV0Zi04XCIgfSB9LFxuICAgICAgICByc3M6IHtcbiAgICAgICAgICAgIF9hdHRyaWJ1dGVzOiB7IHZlcnNpb246IFwiMi4wXCIgfSxcbiAgICAgICAgICAgIGNoYW5uZWw6IHtcbiAgICAgICAgICAgICAgICB0aXRsZTogeyBfdGV4dDogb3B0aW9ucy50aXRsZSB9LFxuICAgICAgICAgICAgICAgIGxpbms6IHsgX3RleHQ6IHV0aWxzXzEuc2FuaXRpemUob3B0aW9ucy5saW5rKSB9LFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB7IF90ZXh0OiBvcHRpb25zLmRlc2NyaXB0aW9uIH0sXG4gICAgICAgICAgICAgICAgbGFzdEJ1aWxkRGF0ZTogeyBfdGV4dDogb3B0aW9ucy51cGRhdGVkID8gb3B0aW9ucy51cGRhdGVkLnRvVVRDU3RyaW5nKCkgOiBuZXcgRGF0ZSgpLnRvVVRDU3RyaW5nKCkgfSxcbiAgICAgICAgICAgICAgICBkb2NzOiB7IF90ZXh0OiBvcHRpb25zLmRvY3MgPyBvcHRpb25zLmRvY3MgOiBcImh0dHBzOi8vdmFsaWRhdG9yLnczLm9yZy9mZWVkL2RvY3MvcnNzMi5odG1sXCIgfSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0b3I6IHsgX3RleHQ6IG9wdGlvbnMuZ2VuZXJhdG9yIHx8IGNvbmZpZ18xLmdlbmVyYXRvciB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9O1xuICAgIGlmIChvcHRpb25zLmxhbmd1YWdlKSB7XG4gICAgICAgIGJhc2UucnNzLmNoYW5uZWwubGFuZ3VhZ2UgPSB7IF90ZXh0OiBvcHRpb25zLmxhbmd1YWdlIH07XG4gICAgfVxuICAgIGlmIChvcHRpb25zLnR0bCkge1xuICAgICAgICBiYXNlLnJzcy5jaGFubmVsLnR0bCA9IHsgX3RleHQ6IG9wdGlvbnMudHRsIH07XG4gICAgfVxuICAgIGlmIChvcHRpb25zLmltYWdlKSB7XG4gICAgICAgIGJhc2UucnNzLmNoYW5uZWwuaW1hZ2UgPSB7XG4gICAgICAgICAgICB0aXRsZTogeyBfdGV4dDogb3B0aW9ucy50aXRsZSB9LFxuICAgICAgICAgICAgdXJsOiB7IF90ZXh0OiBvcHRpb25zLmltYWdlIH0sXG4gICAgICAgICAgICBsaW5rOiB7IF90ZXh0OiB1dGlsc18xLnNhbml0aXplKG9wdGlvbnMubGluaykgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5jb3B5cmlnaHQpIHtcbiAgICAgICAgYmFzZS5yc3MuY2hhbm5lbC5jb3B5cmlnaHQgPSB7IF90ZXh0OiBvcHRpb25zLmNvcHlyaWdodCB9O1xuICAgIH1cbiAgICBpbnMuY2F0ZWdvcmllcy5tYXAoZnVuY3Rpb24gKGNhdGVnb3J5KSB7XG4gICAgICAgIGlmICghYmFzZS5yc3MuY2hhbm5lbC5jYXRlZ29yeSkge1xuICAgICAgICAgICAgYmFzZS5yc3MuY2hhbm5lbC5jYXRlZ29yeSA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGJhc2UucnNzLmNoYW5uZWwuY2F0ZWdvcnkucHVzaCh7IF90ZXh0OiBjYXRlZ29yeSB9KTtcbiAgICB9KTtcbiAgICB2YXIgYXRvbUxpbmsgPSBvcHRpb25zLmZlZWQgfHwgKG9wdGlvbnMuZmVlZExpbmtzICYmIG9wdGlvbnMuZmVlZExpbmtzLnJzcyk7XG4gICAgaWYgKGF0b21MaW5rKSB7XG4gICAgICAgIGlzQXRvbSA9IHRydWU7XG4gICAgICAgIGJhc2UucnNzLmNoYW5uZWxbXCJhdG9tOmxpbmtcIl0gPSBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgX2F0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgaHJlZjogdXRpbHNfMS5zYW5pdGl6ZShhdG9tTGluayksXG4gICAgICAgICAgICAgICAgICAgIHJlbDogXCJzZWxmXCIsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiYXBwbGljYXRpb24vcnNzK3htbFwiLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICBdO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5odWIpIHtcbiAgICAgICAgaXNBdG9tID0gdHJ1ZTtcbiAgICAgICAgaWYgKCFiYXNlLnJzcy5jaGFubmVsW1wiYXRvbTpsaW5rXCJdKSB7XG4gICAgICAgICAgICBiYXNlLnJzcy5jaGFubmVsW1wiYXRvbTpsaW5rXCJdID0gW107XG4gICAgICAgIH1cbiAgICAgICAgYmFzZS5yc3MuY2hhbm5lbFtcImF0b206bGlua1wiXSA9IHtcbiAgICAgICAgICAgIF9hdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgICAgaHJlZjogdXRpbHNfMS5zYW5pdGl6ZShvcHRpb25zLmh1YiksXG4gICAgICAgICAgICAgICAgcmVsOiBcImh1YlwiXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIGJhc2UucnNzLmNoYW5uZWwuaXRlbSA9IFtdO1xuICAgIGlucy5pdGVtcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgICAgIHZhciBpdGVtID0ge307XG4gICAgICAgIGlmIChlbnRyeS50aXRsZSkge1xuICAgICAgICAgICAgaXRlbS50aXRsZSA9IHsgX2NkYXRhOiBlbnRyeS50aXRsZSB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChlbnRyeS5saW5rKSB7XG4gICAgICAgICAgICBpdGVtLmxpbmsgPSB7IF90ZXh0OiB1dGlsc18xLnNhbml0aXplKGVudHJ5LmxpbmspIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVudHJ5Lmd1aWQpIHtcbiAgICAgICAgICAgIGl0ZW0uZ3VpZCA9IHsgX3RleHQ6IGVudHJ5Lmd1aWQgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChlbnRyeS5pZCkge1xuICAgICAgICAgICAgaXRlbS5ndWlkID0geyBfdGV4dDogZW50cnkuaWQgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChlbnRyeS5saW5rKSB7XG4gICAgICAgICAgICBpdGVtLmd1aWQgPSB7IF90ZXh0OiB1dGlsc18xLnNhbml0aXplKGVudHJ5LmxpbmspIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVudHJ5LmRhdGUpIHtcbiAgICAgICAgICAgIGl0ZW0ucHViRGF0ZSA9IHsgX3RleHQ6IGVudHJ5LmRhdGUudG9VVENTdHJpbmcoKSB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChlbnRyeS5wdWJsaXNoZWQpIHtcbiAgICAgICAgICAgIGl0ZW0ucHViRGF0ZSA9IHsgX3RleHQ6IGVudHJ5LnB1Ymxpc2hlZC50b1VUQ1N0cmluZygpIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVudHJ5LmRlc2NyaXB0aW9uKSB7XG4gICAgICAgICAgICBpdGVtLmRlc2NyaXB0aW9uID0geyBfY2RhdGE6IGVudHJ5LmRlc2NyaXB0aW9uIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVudHJ5LmNvbnRlbnQpIHtcbiAgICAgICAgICAgIGlzQ29udGVudCA9IHRydWU7XG4gICAgICAgICAgICBpdGVtW1wiY29udGVudDplbmNvZGVkXCJdID0geyBfY2RhdGE6IGVudHJ5LmNvbnRlbnQgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShlbnRyeS5hdXRob3IpKSB7XG4gICAgICAgICAgICBpdGVtLmF1dGhvciA9IFtdO1xuICAgICAgICAgICAgZW50cnkuYXV0aG9yLm1hcChmdW5jdGlvbiAoYXV0aG9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKGF1dGhvci5lbWFpbCAmJiBhdXRob3IubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLmF1dGhvci5wdXNoKHsgX3RleHQ6IGF1dGhvci5lbWFpbCArIFwiIChcIiArIGF1dGhvci5uYW1lICsgXCIpXCIgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZW50cnkuY2F0ZWdvcnkpKSB7XG4gICAgICAgICAgICBpdGVtLmNhdGVnb3J5ID0gW107XG4gICAgICAgICAgICBlbnRyeS5jYXRlZ29yeS5tYXAoZnVuY3Rpb24gKGNhdGVnb3J5KSB7XG4gICAgICAgICAgICAgICAgaXRlbS5jYXRlZ29yeS5wdXNoKGZvcm1hdENhdGVnb3J5KGNhdGVnb3J5KSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZW50cnkuZW5jbG9zdXJlKSB7XG4gICAgICAgICAgICBpdGVtLmVuY2xvc3VyZSA9IGZvcm1hdEVuY2xvc3VyZShlbnRyeS5lbmNsb3N1cmUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlbnRyeS5pbWFnZSkge1xuICAgICAgICAgICAgaXRlbS5lbmNsb3N1cmUgPSBmb3JtYXRFbmNsb3N1cmUoZW50cnkuaW1hZ2UsIFwiaW1hZ2VcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVudHJ5LmF1ZGlvKSB7XG4gICAgICAgICAgICBpdGVtLmVuY2xvc3VyZSA9IGZvcm1hdEVuY2xvc3VyZShlbnRyeS5hdWRpbywgXCJhdWRpb1wiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZW50cnkudmlkZW8pIHtcbiAgICAgICAgICAgIGl0ZW0uZW5jbG9zdXJlID0gZm9ybWF0RW5jbG9zdXJlKGVudHJ5LnZpZGVvLCBcInZpZGVvXCIpO1xuICAgICAgICB9XG4gICAgICAgIGJhc2UucnNzLmNoYW5uZWwuaXRlbS5wdXNoKGl0ZW0pO1xuICAgIH0pO1xuICAgIGlmIChpc0NvbnRlbnQpIHtcbiAgICAgICAgYmFzZS5yc3MuX2F0dHJpYnV0ZXNbXCJ4bWxuczpkY1wiXSA9IFwiaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS9cIjtcbiAgICAgICAgYmFzZS5yc3MuX2F0dHJpYnV0ZXNbXCJ4bWxuczpjb250ZW50XCJdID0gXCJodHRwOi8vcHVybC5vcmcvcnNzLzEuMC9tb2R1bGVzL2NvbnRlbnQvXCI7XG4gICAgfVxuICAgIGlmIChpc0F0b20pIHtcbiAgICAgICAgYmFzZS5yc3MuX2F0dHJpYnV0ZXNbXCJ4bWxuczphdG9tXCJdID0gXCJodHRwOi8vd3d3LnczLm9yZy8yMDA1L0F0b21cIjtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnZlcnQuanMyeG1sKGJhc2UsIHsgY29tcGFjdDogdHJ1ZSwgaWdub3JlQ29tbWVudDogdHJ1ZSwgc3BhY2VzOiA0IH0pO1xufSk7XG52YXIgZm9ybWF0RW5jbG9zdXJlID0gZnVuY3Rpb24gKGVuY2xvc3VyZSwgbWltZUNhdGVnb3J5KSB7XG4gICAgaWYgKG1pbWVDYXRlZ29yeSA9PT0gdm9pZCAwKSB7IG1pbWVDYXRlZ29yeSA9IFwiaW1hZ2VcIjsgfVxuICAgIGlmICh0eXBlb2YgZW5jbG9zdXJlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHZhciB0eXBlXzEgPSBuZXcgVVJMKGVuY2xvc3VyZSkucGF0aG5hbWUuc3BsaXQoXCIuXCIpLnNsaWNlKC0xKVswXTtcbiAgICAgICAgcmV0dXJuIHsgX2F0dHJpYnV0ZXM6IHsgdXJsOiBlbmNsb3N1cmUsIGxlbmd0aDogMCwgdHlwZTogbWltZUNhdGVnb3J5ICsgXCIvXCIgKyB0eXBlXzEgfSB9O1xuICAgIH1cbiAgICB2YXIgdHlwZSA9IG5ldyBVUkwoZW5jbG9zdXJlLnVybCkucGF0aG5hbWUuc3BsaXQoXCIuXCIpLnNsaWNlKC0xKVswXTtcbiAgICByZXR1cm4geyBfYXR0cmlidXRlczogX19hc3NpZ24oeyBsZW5ndGg6IDAsIHR5cGU6IG1pbWVDYXRlZ29yeSArIFwiL1wiICsgdHlwZSB9LCBlbmNsb3N1cmUpIH07XG59O1xudmFyIGZvcm1hdENhdGVnb3J5ID0gZnVuY3Rpb24gKGNhdGVnb3J5KSB7XG4gICAgdmFyIG5hbWUgPSBjYXRlZ29yeS5uYW1lLCBkb21haW4gPSBjYXRlZ29yeS5kb21haW47XG4gICAgcmV0dXJuIHtcbiAgICAgICAgX3RleHQ6IG5hbWUsXG4gICAgICAgIF9hdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICBkb21haW46IGRvbWFpbixcbiAgICAgICAgfSxcbiAgICB9O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJzczIuanMubWFwIl0sIm5hbWVzIjpbIl9fYXNzaWduIiwiT2JqZWN0IiwiYXNzaWduIiwidCIsInMiLCJpIiwibiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY29udmVydCIsInJlcXVpcmUiLCJjb25maWdfMSIsInV0aWxzXzEiLCJkZWZhdWx0IiwiaW5zIiwib3B0aW9ucyIsImlzQXRvbSIsImlzQ29udGVudCIsImJhc2UiLCJfZGVjbGFyYXRpb24iLCJfYXR0cmlidXRlcyIsInZlcnNpb24iLCJlbmNvZGluZyIsInJzcyIsImNoYW5uZWwiLCJ0aXRsZSIsIl90ZXh0IiwibGluayIsInNhbml0aXplIiwiZGVzY3JpcHRpb24iLCJsYXN0QnVpbGREYXRlIiwidXBkYXRlZCIsInRvVVRDU3RyaW5nIiwiRGF0ZSIsImRvY3MiLCJnZW5lcmF0b3IiLCJsYW5ndWFnZSIsInR0bCIsImltYWdlIiwidXJsIiwiY29weXJpZ2h0IiwiY2F0ZWdvcmllcyIsIm1hcCIsImNhdGVnb3J5IiwicHVzaCIsImF0b21MaW5rIiwiZmVlZCIsImZlZWRMaW5rcyIsImhyZWYiLCJyZWwiLCJ0eXBlIiwiaHViIiwiaXRlbSIsIml0ZW1zIiwiZW50cnkiLCJfY2RhdGEiLCJndWlkIiwiaWQiLCJkYXRlIiwicHViRGF0ZSIsInB1Ymxpc2hlZCIsImNvbnRlbnQiLCJBcnJheSIsImlzQXJyYXkiLCJhdXRob3IiLCJlbWFpbCIsIm5hbWUiLCJmb3JtYXRDYXRlZ29yeSIsImVuY2xvc3VyZSIsImZvcm1hdEVuY2xvc3VyZSIsImF1ZGlvIiwidmlkZW8iLCJqczJ4bWwiLCJjb21wYWN0IiwiaWdub3JlQ29tbWVudCIsInNwYWNlcyIsIm1pbWVDYXRlZ29yeSIsInR5cGVfMSIsIlVSTCIsInBhdGhuYW1lIiwic3BsaXQiLCJzbGljZSIsImRvbWFpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/feed/lib/rss2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/feed/lib/utils.js":
/*!****************************************!*\
  !*** ./node_modules/feed/lib/utils.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.sanitize = void 0;\nfunction sanitize(url) {\n    if (typeof url === \"undefined\") {\n        return;\n    }\n    return url.replace(/&/g, \"&amp;\");\n}\nexports.sanitize = sanitize; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZmVlZC9saWIvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGdCQUFnQixHQUFHLEtBQUs7QUFDeEIsU0FBU0UsU0FBU0MsR0FBRztJQUNqQixJQUFJLE9BQVFBLFFBQVMsYUFBYTtRQUM5QjtJQUNKO0lBQ0EsT0FBT0EsSUFBSUMsT0FBTyxDQUFDLE1BQU07QUFDN0I7QUFDQUosZ0JBQWdCLEdBQUdFLFVBQ25CLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QtcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL2ZlZWQvbGliL3V0aWxzLmpzPzM2ZmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNhbml0aXplID0gdm9pZCAwO1xuZnVuY3Rpb24gc2FuaXRpemUodXJsKSB7XG4gICAgaWYgKHR5cGVvZiAodXJsKSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByZXR1cm4gdXJsLnJlcGxhY2UoLyYvZywgJyZhbXA7Jyk7XG59XG5leHBvcnRzLnNhbml0aXplID0gc2FuaXRpemU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzYW5pdGl6ZSIsInVybCIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/feed/lib/utils.js\n");

/***/ })

};
;